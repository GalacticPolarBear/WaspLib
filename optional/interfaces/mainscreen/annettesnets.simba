{$DEFINE RELD_ANNETTESNETS_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type

  TRSAnnettesNets = type TRSTitledInterface;

function TRSAnnettesNets.GetSlotBoxes(): TBoxArray;
begin

  Result := [Box(Self.Bounds().X1 + 134, Self.Bounds().Y1 + 95, Self.Bounds().X2 - 39, Self.Bounds().Y2 - 35)];
end;

procedure TRSAnnettesNets.Setup(); override;
begin
  inherited;

  Self.Name := "Annette's Nets";
  Self.ItemInterface.DiscoverOffset := Box(0, 9, 0, 0);
  Self.ItemInterface.GetSearchBoxesFunction := @Self.GetSlotBoxes;
end;

procedure TRSAnnettesNets.SetupAlignment(); overload;
var
  alignment: TRSInterfaceAlignment;
begin
  inherited;

  case mode of
    ERSClientMode.FIXED:
      begin
        alignment.Left := [@InterfaceArea.X1];
        alignment.Right := [@InterfaceArea.X2];
        alignment.Top := [@InterfaceArea.Y1];
        alignment.Bottom := [@InterfaceArea.Y2];
        alignment.MaxWidth := 204;
        alignment.MaxHeight := 160;
      end;

    ERSClientMode.RESIZABLE_CLASSIC, ERSClientMode.RESIZABLE_MODERN:
      begin
        alignment.Left := [@InterfaceArea.X1];
        alignment.Right := [@InterfaceArea.X2];
        alignment.Top := [@InterfaceArea.Y1, -1];
        alignment.Bottom := [@InterfaceArea.Y2];
        alignment.MaxWidth := 204;
        alignment.MaxHeight := 160;
      end;
  end;
end;

function TRSAnnettesNets.IsOpen(): Boolean;
begin
  Result := Self.IsTitle(Self.Name);
end;

function TRSAnnettesNets.IsOpen(waitTime: Int32): Boolean; overload;
begin
  Result := WaitUntil(Self.IsOpen(), SRL.TruncatedGauss(50, 1500), waitTime);
end;

function TRSAnnettesNets.Close(pressEscape: Boolean = False): Boolean;
begin
  if not Self.IsOpen() then
    Exit(True);

  Result := Self.ClickCloseButton(pressEscape) and WaitUntil(not Self.IsOpen(), SRL.TruncatedGauss(50, 1500), Random(1500, 2000));
end;


var
 AnnettesNets : TRSAnnettesNets;

procedure TRSClient.ClientModeChanged(); override;
begin
  inherited;

  AnnettesNets.SetupAlignment();
end;

procedure TSRL.Setup(); override;
begin
  inherited;

  AnnettesNets.Setup();
end;
